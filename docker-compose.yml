version: '3.9'

x-common-secrets: &common-secrets
  secrets:
    - mongodb_root_username
    - mongodb_root_password

x-mongo-config: &mongo-config
  image: mongo:4.4.16
  secrets:
    - mongodb_root_username
    - mongodb_root_password
  environment:
    - MONGO_INITDB_ROOT_USERNAME_FILE=/run/secrets/mongodb_root_username
    - MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/mongodb_root_password
  deploy:
    mode: replicated
    replicas: 1   # Only one replica of MongoDB per service, not distributed

services:
  traefik:
    image: traefik:v2.9
    ports:
    - target: 80
      published: 80
      mode: host 
    - target: 443
      published: 443
      mode: host
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=shafigh75@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--providers.docker.swarmMode=true" # Enable swarm mode
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"
    deploy:
      placement:
        constraints: [node.role == manager]  # Run only on manager node
      labels:
        - "traefik.http.routers.api.rule=Host(`traefik.geek4geeks.ir`)"
        - "traefik.http.routers.api.service=api@internal"
        - "traefik.http.routers.api.entrypoints=websecure"
        - "traefik.http.routers.api.tls.certresolver=myresolver"


  auth:
    <<: *common-secrets
    image: 141.11.187.140:5000/auth
    deploy:
      replicas: 2  # One instance on each node
      placement:
        max_replicas_per_node: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.http.routers.auth.rule=Host(`auth.geek4geeks.ir`)"
        - "traefik.http.services.auth.loadbalancer.server.port=3000"
        - "traefik.http.routers.auth.entrypoints=websecure"
        - "traefik.http.routers.auth.tls.certresolver=myresolver"
    depends_on:
      - authentiq-db

  account:
    <<: *common-secrets
    image: 141.11.187.140:5000/accounter
    deploy:
      replicas: 2  # One instance on each node
      placement:
        max_replicas_per_node: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.http.routers.account.rule=Host(`usermanager.geek4geeks.ir`)"
        - "traefik.http.services.account.loadbalancer.server.port=6000"
        - "traefik.http.routers.account.entrypoints=websecure"
        - "traefik.http.routers.account.tls.certresolver=myresolver"
    depends_on:
      - account-db

  authentiq-db:
    <<: *mongo-config
    container_name: authentiq-db
    volumes:
      - type: bind
        source: ./auth_data
        target: /data/db
    ports:
      - "27017:27017"
    deploy:
      placement:
        constraints:
          - node.role == manager  # Only on manager node

  account-db:
    <<: *mongo-config
    container_name: account-db
    volumes:
      - type: bind
        source: ./account_data
        target: /data/db
    ports:
      - "27018:27017"
    deploy:
      placement:
        constraints:
          - node.role == manager  # Only on manager node


  visualizer:
    image: dockersamples/visualizer:latest
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.http.routers.visualizer.rule=Host(`visualizer.geek4geeks.ir`)"
        - "traefik.http.services.visualizer.loadbalancer.server.port=8080"
        - "traefik.http.routers.visualizer.entrypoints=websecure"
        - "traefik.http.routers.visualizer.tls.certresolver=myresolver"
        # - "traefik.http.middlewares.my-ipwhitelist.ipwhitelist.sourcerange=192.168.1.0/24,10.0.0.0/8,127.0.0.1/32,::1/128,83.123.78.253/32"
        # - "traefik.http.routers.visualizer.middlewares=my-ipwhitelist@docker"
        - "traefik.http.middlewares.my-auth.basicauth.users=mohammad:$$2y$$05$$7KRcmYEuRmELxSlLjLFpdu1meU.zRptBiyoGB0x8Qt6sMz8/DxngO"
        - "traefik.http.routers.visualizer.middlewares=my-auth@docker"

secrets:
  mongodb_root_username:
    file: mongodb_root_username.txt
  mongodb_root_password:
    file: mongodb_root_password.txt

